// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model user {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String         @unique
  password     String
  role         String
  review       review[]
  applied_jobs Applications[]
  Resume       Resume?
}

model company {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  ownerId     String   @unique
  jobs        job[]
  review      review[]
}

model job {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String
  location        String
  salary          Int
  employment_type String
  job_type        String
  apply_through   String
  companyId       String         @db.ObjectId
  company         company        @relation(fields: [companyId], references: [id])
  applications    Applications[]
}

model review {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  userId    String  @db.ObjectId
  user      user    @relation(fields: [userId], references: [id])
  companyId String  @db.ObjectId
  company   company @relation(fields: [companyId], references: [id])
}

model Applications {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  user_id  String @db.ObjectId
  user     user   @relation(fields: [user_id], references: [id])
  job_id   String @db.ObjectId
  jobs     job    @relation(fields: [job_id], references: [id])
  Resume   Resume @relation(fields: [resumeId], references: [id])
  resumeId String @db.ObjectId
}

model Resume {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  summary       String?
  user          user           @relation(fields: [userId], references: [id])
  userId        String         @unique @db.ObjectId
  applicationId String         @db.ObjectId
  applications  Applications[]
  educations    String[]
  experiences   String[]
  skills        String[]
  projects      String[]
}
